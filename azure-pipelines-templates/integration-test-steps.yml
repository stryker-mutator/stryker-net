steps:
  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests'
    inputs:
      command: test
      projects: 'src/**/*.UnitTest.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Install pre-release package in netcoreapp2.1'
    inputs:
      command: custom
      custom: add
      arguments: $(IntegrationTestPath)/TargetProjects/NetCore2_1/ExampleProject.XUnit/ExampleProject.XUnit.csproj package StrykerMutator.DotNetCoreCli -n -v $(PreReleaseVersion) -s $(PreReleaseFeedUri)

  - task: DotNetCoreCLI@2
    displayName: 'Install pre-release package in netstandard2.0'
    inputs:
      command: custom
      custom: add
      arguments: $(IntegrationTestPath)/TargetProjects/NetStandard2_0/ExampleProject.XUnit/ExampleProject.XUnit.csproj package StrykerMutator.DotNetCoreCli -n -v $(PreReleaseVersion) -s $(PreReleaseFeedUri)

  - script: 'node prepare-integrationtest.js $(PreReleaseVersion)'
    displayName: 'Update stryker integration test with pre-release'

  - task: DotNetCoreCLI@2
    displayName: 'Restore pre-release packages in integrationtest project'
    inputs:
      command: custom
      custom: restore
      projects: '$(IntegrationTestPath)/**/ExampleProject.XUnit/ExampleProject.XUnit.csproj'
      arguments: '-s $(PreReleaseFeedUri)'
  
  - task: DotNetCoreCLI@2
    displayName: 'Run integration test netstandard2.0'
    inputs:
      command: custom
      custom: stryker
      arguments: '--dev-mode'
      workingDirectory: $(IntegrationTestPath)/TargetProjects/NetStandard2_0/ExampleProject.XUnit
    
  - task: DotNetCoreCLI@2
    displayName: 'Run integration test netcoreapp2.1'
    inputs:
      command: custom
      custom: stryker
      arguments: '--dev-mode'
      workingDirectory: $(IntegrationTestPath)/TargetProjects/NetCore2_1/ExampleProject.XUnit

  - task: DotNetCoreCLI@2
    displayName: 'Assert integration test results'
    inputs:
      command: test
      projects: '$(IntegrationTestPath)/**/IntegrationTests.csproj'
      workingDirectory: $(IntegrationTestPath)