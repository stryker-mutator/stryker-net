//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v12.0.12.0 (NJsonSchema v9.13.15.0 (Newtonsoft.Json v9.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

namespace ExternalPlanDataClient
{
    #pragma warning disable

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "12.0.12.0 (NJsonSchema v9.13.15.0 (Newtonsoft.Json v9.0.0.0))")]
    public partial class ExternalPlanDataContract 
    {
        private string _baseUrl = (StrykergyiLFBRAziluJbG.MutantControl.IsActive(114)?"Stryker was here!":"");
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<Newtonsoft.Json.JsonSerializerSettings> _settings;
    
        public ExternalPlanDataContract(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl; 
            _httpClient = httpClient; 
            _settings = new System.Lazy<Newtonsoft.Json.JsonSerializerSettings>(() => 
            {
                var settings = new Newtonsoft.Json.JsonSerializerSettings();
                UpdateJsonSerializerSettings(settings);
                return settings;
            });
        }
    
        public string BaseUrl 
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }
    
        protected Newtonsoft.Json.JsonSerializerSettings JsonSerializerSettings { get { return _settings.Value; } }
    
        partial void UpdateJsonSerializerSettings(Newtonsoft.Json.JsonSerializerSettings settings);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);
    
        /// <returns>Success</returns>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        public System.Threading.Tasks.Task IndexAsync()
        {
            return IndexAsync(System.Threading.CancellationToken.None);
        }
    
        /// <returns>Success</returns>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        public async System.Threading.Tasks.Task IndexAsync(System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(116)?!(BaseUrl != null ):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(115)?BaseUrl == null :BaseUrl != null ))? BaseUrl.TrimEnd('/') : (StrykergyiLFBRAziluJbG.MutantControl.IsActive(117)?"Stryker was here!":"")).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(118)?"":"Health"));
    
            var client_ = _httpClient;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod((StrykergyiLFBRAziluJbG.MutantControl.IsActive(119)?"":"GET"));
    
                    PrepareRequest(client_, request_, urlBuilder_);
                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);
                    PrepareRequest(client_, request_, url_);
    
                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait((StrykergyiLFBRAziluJbG.MutantControl.IsActive(120)?true:false));
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(124)?!(response_.Content != null && response_.Content.Headers != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(123)?response_.Content != null || response_.Content.Headers != null:(StrykergyiLFBRAziluJbG.MutantControl.IsActive(121)?response_.Content == null :response_.Content != null )&& (StrykergyiLFBRAziluJbG.MutantControl.IsActive(122)?response_.Content.Headers == null:response_.Content.Headers != null))))
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }
    
                        ProcessResponse(client_, response_);
    
                        var status_ = ((int)response_.StatusCode).ToString();
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(127)?!(status_ == "200"):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(126)?status_ != "200":status_ == (StrykergyiLFBRAziluJbG.MutantControl.IsActive(125)?"":"200")))) 
                        {
                            return;
                        }
                        else
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(133)?!(status_ != "200" && status_ != "204"):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(132)?status_ != "200" || status_ != "204":(StrykergyiLFBRAziluJbG.MutantControl.IsActive(129)?status_ == "200" :status_ != (StrykergyiLFBRAziluJbG.MutantControl.IsActive(128)?"":"200" ))&& (StrykergyiLFBRAziluJbG.MutantControl.IsActive(131)?status_ == "204":status_ != (StrykergyiLFBRAziluJbG.MutantControl.IsActive(130)?"":"204")))))
                        {
                            var responseData_ = (StrykergyiLFBRAziluJbG.MutantControl.IsActive(135)?!(response_.Content == null ):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(134)?response_.Content != null :response_.Content == null ))? null : await response_.Content.ReadAsStringAsync().ConfigureAwait((StrykergyiLFBRAziluJbG.MutantControl.IsActive(136)?true:false)); 
                            throw new SwaggerException((StrykergyiLFBRAziluJbG.MutantControl.IsActive(137)?"":"The HTTP status code of the response was not expected (" )+ (int)response_.StatusCode + (StrykergyiLFBRAziluJbG.MutantControl.IsActive(138)?"":")."), (int)response_.StatusCode, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(140)?!(response_ != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(139)?response_ == null:response_ != null)))
                            response_.Dispose();
                    }
                }
            }
            finally
            {
            }
        }
    
        /// <returns>Success</returns>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        public System.Threading.Tasks.Task UpdateHouseholdAsync(HouseholdRequest request, string version)
        {
            return UpdateHouseholdAsync(request, version, System.Threading.CancellationToken.None);
        }
    
        /// <returns>Success</returns>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        public async System.Threading.Tasks.Task UpdateHouseholdAsync(HouseholdRequest request, string version, System.Threading.CancellationToken cancellationToken)
        {
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(142)?!(version == null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(141)?version != null:version == null)))
                throw new System.ArgumentNullException((StrykergyiLFBRAziluJbG.MutantControl.IsActive(143)?"":"version"));
    
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(145)?!(BaseUrl != null ):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(144)?BaseUrl == null :BaseUrl != null ))? BaseUrl.TrimEnd('/') : (StrykergyiLFBRAziluJbG.MutantControl.IsActive(146)?"Stryker was here!":"")).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(147)?"":"/externalplandata/v{version}/Household/UpdateHousehold"));
            urlBuilder_.Replace((StrykergyiLFBRAziluJbG.MutantControl.IsActive(148)?"":"{version}"), System.Uri.EscapeDataString(ConvertToString(version, System.Globalization.CultureInfo.InvariantCulture)));
    
            var client_ = _httpClient;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var content_ = new System.Net.Http.StringContent(Newtonsoft.Json.JsonConvert.SerializeObject(request, _settings.Value));
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse((StrykergyiLFBRAziluJbG.MutantControl.IsActive(149)?"":"application/json"));
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod((StrykergyiLFBRAziluJbG.MutantControl.IsActive(150)?"":"PUT"));
    
                    PrepareRequest(client_, request_, urlBuilder_);
                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);
                    PrepareRequest(client_, request_, url_);
    
                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait((StrykergyiLFBRAziluJbG.MutantControl.IsActive(151)?true:false));
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(155)?!(response_.Content != null && response_.Content.Headers != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(154)?response_.Content != null || response_.Content.Headers != null:(StrykergyiLFBRAziluJbG.MutantControl.IsActive(152)?response_.Content == null :response_.Content != null )&& (StrykergyiLFBRAziluJbG.MutantControl.IsActive(153)?response_.Content.Headers == null:response_.Content.Headers != null))))
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }
    
                        ProcessResponse(client_, response_);
    
                        var status_ = ((int)response_.StatusCode).ToString();
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(158)?!(status_ == "200"):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(157)?status_ != "200":status_ == (StrykergyiLFBRAziluJbG.MutantControl.IsActive(156)?"":"200")))) 
                        {
                            return;
                        }
                        else
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(164)?!(status_ != "200" && status_ != "204"):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(163)?status_ != "200" || status_ != "204":(StrykergyiLFBRAziluJbG.MutantControl.IsActive(160)?status_ == "200" :status_ != (StrykergyiLFBRAziluJbG.MutantControl.IsActive(159)?"":"200" ))&& (StrykergyiLFBRAziluJbG.MutantControl.IsActive(162)?status_ == "204":status_ != (StrykergyiLFBRAziluJbG.MutantControl.IsActive(161)?"":"204")))))
                        {
                            var responseData_ = (StrykergyiLFBRAziluJbG.MutantControl.IsActive(166)?!(response_.Content == null ):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(165)?response_.Content != null :response_.Content == null ))? null : await response_.Content.ReadAsStringAsync().ConfigureAwait((StrykergyiLFBRAziluJbG.MutantControl.IsActive(167)?true:false)); 
                            throw new SwaggerException((StrykergyiLFBRAziluJbG.MutantControl.IsActive(168)?"":"The HTTP status code of the response was not expected (" )+ (int)response_.StatusCode + (StrykergyiLFBRAziluJbG.MutantControl.IsActive(169)?"":")."), (int)response_.StatusCode, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(171)?!(response_ != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(170)?response_ == null:response_ != null)))
                            response_.Dispose();
                    }
                }
            }
            finally
            {
            }
        }
    
        /// <returns>Success</returns>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        public System.Threading.Tasks.Task GetPlanDetailAsync(string planId, string zipCode, string fipsCode, System.DateTimeOffset? effectiveDate, bool? showDefaultPharmacyPricing, System.Guid? personId, System.DateTimeOffset? birthDate, Health? health, bool? isAnonymous, bool? showLocalPharmacyPricing, string version)
        {
            return GetPlanDetailAsync(planId, zipCode, fipsCode, effectiveDate, showDefaultPharmacyPricing, personId, birthDate, health, isAnonymous, showLocalPharmacyPricing, version, System.Threading.CancellationToken.None);
        }
    
        /// <returns>Success</returns>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        public async System.Threading.Tasks.Task GetPlanDetailAsync(string planId, string zipCode, string fipsCode, System.DateTimeOffset? effectiveDate, bool? showDefaultPharmacyPricing, System.Guid? personId, System.DateTimeOffset? birthDate, Health? health, bool? isAnonymous, bool? showLocalPharmacyPricing, string version, System.Threading.CancellationToken cancellationToken)
        {
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(173)?!(version == null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(172)?version != null:version == null)))
                throw new System.ArgumentNullException((StrykergyiLFBRAziluJbG.MutantControl.IsActive(174)?"":"version"));
    
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(176)?!(BaseUrl != null ):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(175)?BaseUrl == null :BaseUrl != null ))? BaseUrl.TrimEnd('/') : (StrykergyiLFBRAziluJbG.MutantControl.IsActive(177)?"Stryker was here!":"")).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(178)?"":"/externalplandata/v{version}/PlanDetail/GetPlanDetail?"));
            urlBuilder_.Replace((StrykergyiLFBRAziluJbG.MutantControl.IsActive(179)?"":"{version}"), System.Uri.EscapeDataString(ConvertToString(version, System.Globalization.CultureInfo.InvariantCulture)));
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(181)?!(planId != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(180)?planId == null:planId != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(182)?"":"PlanId=")).Append(System.Uri.EscapeDataString(ConvertToString(planId, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(183)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(185)?!(zipCode != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(184)?zipCode == null:zipCode != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(186)?"":"ZipCode=")).Append(System.Uri.EscapeDataString(ConvertToString(zipCode, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(187)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(189)?!(fipsCode != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(188)?fipsCode == null:fipsCode != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(190)?"":"FipsCode=")).Append(System.Uri.EscapeDataString(ConvertToString(fipsCode, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(191)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(193)?!(effectiveDate != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(192)?effectiveDate == null:effectiveDate != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(194)?"":"EffectiveDate=")).Append(System.Uri.EscapeDataString(effectiveDate.Value.ToString((StrykergyiLFBRAziluJbG.MutantControl.IsActive(195)?"":"s"), System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(196)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(198)?!(showDefaultPharmacyPricing != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(197)?showDefaultPharmacyPricing == null:showDefaultPharmacyPricing != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(199)?"":"ShowDefaultPharmacyPricing=")).Append(System.Uri.EscapeDataString(ConvertToString(showDefaultPharmacyPricing, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(200)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(202)?!(personId != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(201)?personId == null:personId != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(203)?"":"PersonId=")).Append(System.Uri.EscapeDataString(ConvertToString(personId, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(204)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(206)?!(birthDate != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(205)?birthDate == null:birthDate != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(207)?"":"BirthDate=")).Append(System.Uri.EscapeDataString(birthDate.Value.ToString((StrykergyiLFBRAziluJbG.MutantControl.IsActive(208)?"":"s"), System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(209)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(211)?!(health != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(210)?health == null:health != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(212)?"":"Health=")).Append(System.Uri.EscapeDataString(ConvertToString(health, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(213)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(215)?!(isAnonymous != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(214)?isAnonymous == null:isAnonymous != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(216)?"":"IsAnonymous=")).Append(System.Uri.EscapeDataString(ConvertToString(isAnonymous, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(217)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(219)?!(showLocalPharmacyPricing != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(218)?showLocalPharmacyPricing == null:showLocalPharmacyPricing != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(220)?"":"ShowLocalPharmacyPricing=")).Append(System.Uri.EscapeDataString(ConvertToString(showLocalPharmacyPricing, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(221)?"":"&"));
            }
if(StrykergyiLFBRAziluJbG.MutantControl.IsActive(222)){            urlBuilder_.Length++;
}else{            urlBuilder_.Length--;
}    
            var client_ = _httpClient;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod((StrykergyiLFBRAziluJbG.MutantControl.IsActive(223)?"":"GET"));
    
                    PrepareRequest(client_, request_, urlBuilder_);
                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);
                    PrepareRequest(client_, request_, url_);
    
                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait((StrykergyiLFBRAziluJbG.MutantControl.IsActive(224)?true:false));
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(228)?!(response_.Content != null && response_.Content.Headers != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(227)?response_.Content != null || response_.Content.Headers != null:(StrykergyiLFBRAziluJbG.MutantControl.IsActive(225)?response_.Content == null :response_.Content != null )&& (StrykergyiLFBRAziluJbG.MutantControl.IsActive(226)?response_.Content.Headers == null:response_.Content.Headers != null))))
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }
    
                        ProcessResponse(client_, response_);
    
                        var status_ = ((int)response_.StatusCode).ToString();
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(231)?!(status_ == "200"):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(230)?status_ != "200":status_ == (StrykergyiLFBRAziluJbG.MutantControl.IsActive(229)?"":"200")))) 
                        {
                            return;
                        }
                        else
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(237)?!(status_ != "200" && status_ != "204"):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(236)?status_ != "200" || status_ != "204":(StrykergyiLFBRAziluJbG.MutantControl.IsActive(233)?status_ == "200" :status_ != (StrykergyiLFBRAziluJbG.MutantControl.IsActive(232)?"":"200" ))&& (StrykergyiLFBRAziluJbG.MutantControl.IsActive(235)?status_ == "204":status_ != (StrykergyiLFBRAziluJbG.MutantControl.IsActive(234)?"":"204")))))
                        {
                            var responseData_ = (StrykergyiLFBRAziluJbG.MutantControl.IsActive(239)?!(response_.Content == null ):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(238)?response_.Content != null :response_.Content == null ))? null : await response_.Content.ReadAsStringAsync().ConfigureAwait((StrykergyiLFBRAziluJbG.MutantControl.IsActive(240)?true:false)); 
                            throw new SwaggerException((StrykergyiLFBRAziluJbG.MutantControl.IsActive(241)?"":"The HTTP status code of the response was not expected (" )+ (int)response_.StatusCode + (StrykergyiLFBRAziluJbG.MutantControl.IsActive(242)?"":")."), (int)response_.StatusCode, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(244)?!(response_ != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(243)?response_ == null:response_ != null)))
                            response_.Dispose();
                    }
                }
            }
            finally
            {
            }
        }
    
        /// <returns>Success</returns>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        public System.Threading.Tasks.Task GetMedicarePlansAsync(System.Guid? personId, System.DateTimeOffset? birthDate, Health2? health, System.DateTimeOffset? effectiveDate, string zipCode, string fIPS, string pharmacyId, bool? showDefaultPharmacyPricing, bool? showLocalPharmacyPricing, bool? isAnonymous, string version)
        {
            return GetMedicarePlansAsync(personId, birthDate, health, effectiveDate, zipCode, fIPS, pharmacyId, showDefaultPharmacyPricing, showLocalPharmacyPricing, isAnonymous, version, System.Threading.CancellationToken.None);
        }
    
        /// <returns>Success</returns>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        public async System.Threading.Tasks.Task GetMedicarePlansAsync(System.Guid? personId, System.DateTimeOffset? birthDate, Health2? health, System.DateTimeOffset? effectiveDate, string zipCode, string fIPS, string pharmacyId, bool? showDefaultPharmacyPricing, bool? showLocalPharmacyPricing, bool? isAnonymous, string version, System.Threading.CancellationToken cancellationToken)
        {
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(246)?!(version == null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(245)?version != null:version == null)))
                throw new System.ArgumentNullException((StrykergyiLFBRAziluJbG.MutantControl.IsActive(247)?"":"version"));
    
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(249)?!(BaseUrl != null ):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(248)?BaseUrl == null :BaseUrl != null ))? BaseUrl.TrimEnd('/') : (StrykergyiLFBRAziluJbG.MutantControl.IsActive(250)?"Stryker was here!":"")).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(251)?"":"/externalplandata/v{version}/PlanSearch/GetMedicarePlans?"));
            urlBuilder_.Replace((StrykergyiLFBRAziluJbG.MutantControl.IsActive(252)?"":"{version}"), System.Uri.EscapeDataString(ConvertToString(version, System.Globalization.CultureInfo.InvariantCulture)));
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(254)?!(personId != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(253)?personId == null:personId != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(255)?"":"PersonId=")).Append(System.Uri.EscapeDataString(ConvertToString(personId, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(256)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(258)?!(birthDate != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(257)?birthDate == null:birthDate != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(259)?"":"BirthDate=")).Append(System.Uri.EscapeDataString(birthDate.Value.ToString((StrykergyiLFBRAziluJbG.MutantControl.IsActive(260)?"":"s"), System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(261)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(263)?!(health != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(262)?health == null:health != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(264)?"":"Health=")).Append(System.Uri.EscapeDataString(ConvertToString(health, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(265)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(267)?!(effectiveDate != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(266)?effectiveDate == null:effectiveDate != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(268)?"":"EffectiveDate=")).Append(System.Uri.EscapeDataString(effectiveDate.Value.ToString((StrykergyiLFBRAziluJbG.MutantControl.IsActive(269)?"":"s"), System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(270)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(272)?!(zipCode != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(271)?zipCode == null:zipCode != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(273)?"":"ZipCode=")).Append(System.Uri.EscapeDataString(ConvertToString(zipCode, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(274)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(276)?!(fIPS != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(275)?fIPS == null:fIPS != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(277)?"":"FIPS=")).Append(System.Uri.EscapeDataString(ConvertToString(fIPS, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(278)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(280)?!(pharmacyId != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(279)?pharmacyId == null:pharmacyId != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(281)?"":"PharmacyId=")).Append(System.Uri.EscapeDataString(ConvertToString(pharmacyId, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(282)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(284)?!(showDefaultPharmacyPricing != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(283)?showDefaultPharmacyPricing == null:showDefaultPharmacyPricing != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(285)?"":"ShowDefaultPharmacyPricing=")).Append(System.Uri.EscapeDataString(ConvertToString(showDefaultPharmacyPricing, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(286)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(288)?!(showLocalPharmacyPricing != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(287)?showLocalPharmacyPricing == null:showLocalPharmacyPricing != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(289)?"":"ShowLocalPharmacyPricing=")).Append(System.Uri.EscapeDataString(ConvertToString(showLocalPharmacyPricing, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(290)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(292)?!(isAnonymous != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(291)?isAnonymous == null:isAnonymous != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(293)?"":"IsAnonymous=")).Append(System.Uri.EscapeDataString(ConvertToString(isAnonymous, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(294)?"":"&"));
            }
if(StrykergyiLFBRAziluJbG.MutantControl.IsActive(295)){            urlBuilder_.Length++;
}else{            urlBuilder_.Length--;
}    
            var client_ = _httpClient;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod((StrykergyiLFBRAziluJbG.MutantControl.IsActive(296)?"":"GET"));
    
                    PrepareRequest(client_, request_, urlBuilder_);
                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);
                    PrepareRequest(client_, request_, url_);
    
                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait((StrykergyiLFBRAziluJbG.MutantControl.IsActive(297)?true:false));
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(301)?!(response_.Content != null && response_.Content.Headers != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(300)?response_.Content != null || response_.Content.Headers != null:(StrykergyiLFBRAziluJbG.MutantControl.IsActive(298)?response_.Content == null :response_.Content != null )&& (StrykergyiLFBRAziluJbG.MutantControl.IsActive(299)?response_.Content.Headers == null:response_.Content.Headers != null))))
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }
    
                        ProcessResponse(client_, response_);
    
                        var status_ = ((int)response_.StatusCode).ToString();
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(304)?!(status_ == "200"):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(303)?status_ != "200":status_ == (StrykergyiLFBRAziluJbG.MutantControl.IsActive(302)?"":"200")))) 
                        {
                            return;
                        }
                        else
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(310)?!(status_ != "200" && status_ != "204"):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(309)?status_ != "200" || status_ != "204":(StrykergyiLFBRAziluJbG.MutantControl.IsActive(306)?status_ == "200" :status_ != (StrykergyiLFBRAziluJbG.MutantControl.IsActive(305)?"":"200" ))&& (StrykergyiLFBRAziluJbG.MutantControl.IsActive(308)?status_ == "204":status_ != (StrykergyiLFBRAziluJbG.MutantControl.IsActive(307)?"":"204")))))
                        {
                            var responseData_ = (StrykergyiLFBRAziluJbG.MutantControl.IsActive(312)?!(response_.Content == null ):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(311)?response_.Content != null :response_.Content == null ))? null : await response_.Content.ReadAsStringAsync().ConfigureAwait((StrykergyiLFBRAziluJbG.MutantControl.IsActive(313)?true:false)); 
                            throw new SwaggerException((StrykergyiLFBRAziluJbG.MutantControl.IsActive(314)?"":"The HTTP status code of the response was not expected (" )+ (int)response_.StatusCode + (StrykergyiLFBRAziluJbG.MutantControl.IsActive(315)?"":")."), (int)response_.StatusCode, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(317)?!(response_ != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(316)?response_ == null:response_ != null)))
                            response_.Dispose();
                    }
                }
            }
            finally
            {
            }
        }
    
        /// <returns>Success</returns>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        public System.Threading.Tasks.Task<System.Collections.Generic.ICollection<AnnualMedicalCostResult>> GetIfpMedicalCostAsync(System.Guid? householdRequest_HeadOfHousehold_Id, string householdRequest_HeadOfHousehold_FirstName, string householdRequest_HeadOfHousehold_LastName, System.DateTimeOffset? householdRequest_HeadOfHousehold_BirthDate, Health3? householdRequest_HeadOfHousehold_Health, Relation? householdRequest_HeadOfHousehold_Relation, System.Collections.Generic.IEnumerable<object> householdRequest_Members, string householdRequest_PharmacyNabp, bool? householdRequest_IsAnonymous, System.Guid? personId, System.DateTimeOffset? birthDate, Health4? health, System.DateTimeOffset? effectiveDate, string zipCode, string fIPS, string pharmacyId, bool? showDefaultPharmacyPricing, bool? showLocalPharmacyPricing, bool? isAnonymous, string version)
        {
            return GetIfpMedicalCostAsync(householdRequest_HeadOfHousehold_Id, householdRequest_HeadOfHousehold_FirstName, householdRequest_HeadOfHousehold_LastName, householdRequest_HeadOfHousehold_BirthDate, householdRequest_HeadOfHousehold_Health, householdRequest_HeadOfHousehold_Relation, householdRequest_Members, householdRequest_PharmacyNabp, householdRequest_IsAnonymous, personId, birthDate, health, effectiveDate, zipCode, fIPS, pharmacyId, showDefaultPharmacyPricing, showLocalPharmacyPricing, isAnonymous, version, System.Threading.CancellationToken.None);
        }
    
        /// <returns>Success</returns>
        /// <exception cref="SwaggerException">A server side error occurred.</exception>
        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        public async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<AnnualMedicalCostResult>> GetIfpMedicalCostAsync(System.Guid? householdRequest_HeadOfHousehold_Id, string householdRequest_HeadOfHousehold_FirstName, string householdRequest_HeadOfHousehold_LastName, System.DateTimeOffset? householdRequest_HeadOfHousehold_BirthDate, Health3? householdRequest_HeadOfHousehold_Health, Relation? householdRequest_HeadOfHousehold_Relation, System.Collections.Generic.IEnumerable<object> householdRequest_Members, string householdRequest_PharmacyNabp, bool? householdRequest_IsAnonymous, System.Guid? personId, System.DateTimeOffset? birthDate, Health4? health, System.DateTimeOffset? effectiveDate, string zipCode, string fIPS, string pharmacyId, bool? showDefaultPharmacyPricing, bool? showLocalPharmacyPricing, bool? isAnonymous, string version, System.Threading.CancellationToken cancellationToken)
        {
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(319)?!(version == null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(318)?version != null:version == null)))
                throw new System.ArgumentNullException((StrykergyiLFBRAziluJbG.MutantControl.IsActive(320)?"":"version"));
    
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(322)?!(BaseUrl != null ):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(321)?BaseUrl == null :BaseUrl != null ))? BaseUrl.TrimEnd('/') : (StrykergyiLFBRAziluJbG.MutantControl.IsActive(323)?"Stryker was here!":"")).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(324)?"":"/externalplandata/v{version}/PlanSearch/GetIfpMedicalCost?"));
            urlBuilder_.Replace((StrykergyiLFBRAziluJbG.MutantControl.IsActive(325)?"":"{version}"), System.Uri.EscapeDataString(ConvertToString(version, System.Globalization.CultureInfo.InvariantCulture)));
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(327)?!(householdRequest_HeadOfHousehold_Id != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(326)?householdRequest_HeadOfHousehold_Id == null:householdRequest_HeadOfHousehold_Id != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(328)?"":"HouseholdRequest.HeadOfHousehold.Id=")).Append(System.Uri.EscapeDataString(ConvertToString(householdRequest_HeadOfHousehold_Id, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(329)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(331)?!(householdRequest_HeadOfHousehold_FirstName != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(330)?householdRequest_HeadOfHousehold_FirstName == null:householdRequest_HeadOfHousehold_FirstName != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(332)?"":"HouseholdRequest.HeadOfHousehold.FirstName=")).Append(System.Uri.EscapeDataString(ConvertToString(householdRequest_HeadOfHousehold_FirstName, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(333)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(335)?!(householdRequest_HeadOfHousehold_LastName != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(334)?householdRequest_HeadOfHousehold_LastName == null:householdRequest_HeadOfHousehold_LastName != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(336)?"":"HouseholdRequest.HeadOfHousehold.LastName=")).Append(System.Uri.EscapeDataString(ConvertToString(householdRequest_HeadOfHousehold_LastName, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(337)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(339)?!(householdRequest_HeadOfHousehold_BirthDate != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(338)?householdRequest_HeadOfHousehold_BirthDate == null:householdRequest_HeadOfHousehold_BirthDate != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(340)?"":"HouseholdRequest.HeadOfHousehold.BirthDate=")).Append(System.Uri.EscapeDataString(householdRequest_HeadOfHousehold_BirthDate.Value.ToString((StrykergyiLFBRAziluJbG.MutantControl.IsActive(341)?"":"s"), System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(342)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(344)?!(householdRequest_HeadOfHousehold_Health != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(343)?householdRequest_HeadOfHousehold_Health == null:householdRequest_HeadOfHousehold_Health != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(345)?"":"HouseholdRequest.HeadOfHousehold.Health=")).Append(System.Uri.EscapeDataString(ConvertToString(householdRequest_HeadOfHousehold_Health, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(346)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(348)?!(householdRequest_HeadOfHousehold_Relation != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(347)?householdRequest_HeadOfHousehold_Relation == null:householdRequest_HeadOfHousehold_Relation != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(349)?"":"HouseholdRequest.HeadOfHousehold.Relation=")).Append(System.Uri.EscapeDataString(ConvertToString(householdRequest_HeadOfHousehold_Relation, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(350)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(352)?!(householdRequest_Members != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(351)?householdRequest_Members == null:householdRequest_Members != null))) 
            {
                foreach (var item_ in householdRequest_Members) { urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(353)?"":"HouseholdRequest.Members=")).Append(System.Uri.EscapeDataString(ConvertToString(item_, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(354)?"":"&")); }
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(356)?!(householdRequest_PharmacyNabp != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(355)?householdRequest_PharmacyNabp == null:householdRequest_PharmacyNabp != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(357)?"":"HouseholdRequest.PharmacyNabp=")).Append(System.Uri.EscapeDataString(ConvertToString(householdRequest_PharmacyNabp, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(358)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(360)?!(householdRequest_IsAnonymous != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(359)?householdRequest_IsAnonymous == null:householdRequest_IsAnonymous != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(361)?"":"HouseholdRequest.IsAnonymous=")).Append(System.Uri.EscapeDataString(ConvertToString(householdRequest_IsAnonymous, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(362)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(364)?!(personId != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(363)?personId == null:personId != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(365)?"":"PersonId=")).Append(System.Uri.EscapeDataString(ConvertToString(personId, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(366)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(368)?!(birthDate != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(367)?birthDate == null:birthDate != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(369)?"":"BirthDate=")).Append(System.Uri.EscapeDataString(birthDate.Value.ToString((StrykergyiLFBRAziluJbG.MutantControl.IsActive(370)?"":"s"), System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(371)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(373)?!(health != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(372)?health == null:health != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(374)?"":"Health=")).Append(System.Uri.EscapeDataString(ConvertToString(health, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(375)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(377)?!(effectiveDate != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(376)?effectiveDate == null:effectiveDate != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(378)?"":"EffectiveDate=")).Append(System.Uri.EscapeDataString(effectiveDate.Value.ToString((StrykergyiLFBRAziluJbG.MutantControl.IsActive(379)?"":"s"), System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(380)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(382)?!(zipCode != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(381)?zipCode == null:zipCode != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(383)?"":"ZipCode=")).Append(System.Uri.EscapeDataString(ConvertToString(zipCode, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(384)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(386)?!(fIPS != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(385)?fIPS == null:fIPS != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(387)?"":"FIPS=")).Append(System.Uri.EscapeDataString(ConvertToString(fIPS, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(388)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(390)?!(pharmacyId != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(389)?pharmacyId == null:pharmacyId != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(391)?"":"PharmacyId=")).Append(System.Uri.EscapeDataString(ConvertToString(pharmacyId, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(392)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(394)?!(showDefaultPharmacyPricing != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(393)?showDefaultPharmacyPricing == null:showDefaultPharmacyPricing != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(395)?"":"ShowDefaultPharmacyPricing=")).Append(System.Uri.EscapeDataString(ConvertToString(showDefaultPharmacyPricing, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(396)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(398)?!(showLocalPharmacyPricing != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(397)?showLocalPharmacyPricing == null:showLocalPharmacyPricing != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(399)?"":"ShowLocalPharmacyPricing=")).Append(System.Uri.EscapeDataString(ConvertToString(showLocalPharmacyPricing, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(400)?"":"&"));
            }
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(402)?!(isAnonymous != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(401)?isAnonymous == null:isAnonymous != null))) 
            {
                urlBuilder_.Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(403)?"":"IsAnonymous=")).Append(System.Uri.EscapeDataString(ConvertToString(isAnonymous, System.Globalization.CultureInfo.InvariantCulture))).Append((StrykergyiLFBRAziluJbG.MutantControl.IsActive(404)?"":"&"));
            }
if(StrykergyiLFBRAziluJbG.MutantControl.IsActive(405)){            urlBuilder_.Length++;
}else{            urlBuilder_.Length--;
}    
            var client_ = _httpClient;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod((StrykergyiLFBRAziluJbG.MutantControl.IsActive(406)?"":"GET"));
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse((StrykergyiLFBRAziluJbG.MutantControl.IsActive(407)?"":"application/json")));
    
                    PrepareRequest(client_, request_, urlBuilder_);
                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);
                    PrepareRequest(client_, request_, url_);
    
                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait((StrykergyiLFBRAziluJbG.MutantControl.IsActive(408)?true:false));
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(412)?!(response_.Content != null && response_.Content.Headers != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(411)?response_.Content != null || response_.Content.Headers != null:(StrykergyiLFBRAziluJbG.MutantControl.IsActive(409)?response_.Content == null :response_.Content != null )&& (StrykergyiLFBRAziluJbG.MutantControl.IsActive(410)?response_.Content.Headers == null:response_.Content.Headers != null))))
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }
    
                        ProcessResponse(client_, response_);
    
                        var status_ = ((int)response_.StatusCode).ToString();
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(415)?!(status_ == "200"):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(414)?status_ != "200":status_ == (StrykergyiLFBRAziluJbG.MutantControl.IsActive(413)?"":"200")))) 
                        {
                            var responseData_ = (StrykergyiLFBRAziluJbG.MutantControl.IsActive(428)?!(response_.Content == null ):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(427)?response_.Content != null :response_.Content == null ))? null : await response_.Content.ReadAsStringAsync().ConfigureAwait((StrykergyiLFBRAziluJbG.MutantControl.IsActive(429)?true:false)); 
                            var result_ = default(System.Collections.Generic.ICollection<AnnualMedicalCostResult>); 
                            try
                            {
                                result_ = Newtonsoft.Json.JsonConvert.DeserializeObject<System.Collections.Generic.ICollection<AnnualMedicalCostResult>>(responseData_, _settings.Value);
                                return result_; 
                            } 
                            catch (System.Exception exception_) 
                            {
                                throw new SwaggerException((StrykergyiLFBRAziluJbG.MutantControl.IsActive(430)?"":"Could not deserialize the response body."), (int)response_.StatusCode, responseData_, headers_, exception_);
                            }
                        }
                        else
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(421)?!(status_ != "200" && status_ != "204"):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(420)?status_ != "200" || status_ != "204":(StrykergyiLFBRAziluJbG.MutantControl.IsActive(417)?status_ == "200" :status_ != (StrykergyiLFBRAziluJbG.MutantControl.IsActive(416)?"":"200" ))&& (StrykergyiLFBRAziluJbG.MutantControl.IsActive(419)?status_ == "204":status_ != (StrykergyiLFBRAziluJbG.MutantControl.IsActive(418)?"":"204")))))
                        {
                            var responseData_ = (StrykergyiLFBRAziluJbG.MutantControl.IsActive(423)?!(response_.Content == null ):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(422)?response_.Content != null :response_.Content == null ))? null : await response_.Content.ReadAsStringAsync().ConfigureAwait((StrykergyiLFBRAziluJbG.MutantControl.IsActive(424)?true:false)); 
                            throw new SwaggerException((StrykergyiLFBRAziluJbG.MutantControl.IsActive(425)?"":"The HTTP status code of the response was not expected (" )+ (int)response_.StatusCode + (StrykergyiLFBRAziluJbG.MutantControl.IsActive(426)?"":")."), (int)response_.StatusCode, responseData_, headers_, null);
                        }
            
                        return default(System.Collections.Generic.ICollection<AnnualMedicalCostResult>);
                    }
                    finally
                    {
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(432)?!(response_ != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(431)?response_ == null:response_ != null)))
                            response_.Dispose();
                    }
                }
            }
            finally
            {
            }
        }
    
        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(433)?!(value is System.Enum):value is System.Enum))
            {
                string name = System.Enum.GetName(value.GetType(), value);
                if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(441)?!(name != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(440)?name == null:name != null)))
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(443)?!(field != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(442)?field == null:field != null)))
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute)) 
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(445)?!(attribute != null):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(444)?attribute == null:attribute != null)))
                        {
                            return attribute.Value;
                        }
                    }
                }
            }
            else if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(434)?!(value is bool):value is bool)) {
                return System.Convert.ToString(value, cultureInfo).ToLowerInvariant();
            }
            else if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(435)?!(value is byte[]):value is byte[]))
            {
                return System.Convert.ToBase64String((byte[]) value);
            }
            else if ((StrykergyiLFBRAziluJbG.MutantControl.IsActive(438)?!(value != null && value.GetType().IsArray):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(437)?value != null || value.GetType().IsArray:(StrykergyiLFBRAziluJbG.MutantControl.IsActive(436)?value == null :value != null )&& value.GetType().IsArray)))
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array) value);
                return string.Join((StrykergyiLFBRAziluJbG.MutantControl.IsActive(439)?"":","), System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }
        
            return System.Convert.ToString(value, cultureInfo);
        }
    }
    
    

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.15.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class HouseholdRequest 
    {
        [Newtonsoft.Json.JsonProperty("headOfHousehold", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Person HeadOfHousehold { get; set; }
    
        [Newtonsoft.Json.JsonProperty("members", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Person> Members { get; set; }
    
        [Newtonsoft.Json.JsonProperty("pharmacyNabp", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PharmacyNabp { get; set; }
    
        [Newtonsoft.Json.JsonProperty("isAnonymous", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAnonymous { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static HouseholdRequest FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<HouseholdRequest>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.15.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Person 
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; }
    
        [Newtonsoft.Json.JsonProperty("firstName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string FirstName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("lastName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string LastName { get; set; }
    
        [Newtonsoft.Json.JsonProperty("birthDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? BirthDate { get; set; }
    
        [Newtonsoft.Json.JsonProperty("health", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public PersonHealth? Health { get; set; }
    
        [Newtonsoft.Json.JsonProperty("relation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public PersonRelation? Relation { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static Person FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Person>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.15.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class AnnualMedicalCostResult 
    {
        [Newtonsoft.Json.JsonProperty("hiosPlanId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string HiosPlanId { get; set; }
    
        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
    
        public static AnnualMedicalCostResult FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<AnnualMedicalCostResult>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.15.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum Health
    {
        [System.Runtime.Serialization.EnumMember(Value = @"NoUpdate")]
        NoUpdate = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Excellent")]
        Excellent = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VeryGood")]
        VeryGood = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Good")]
        Good = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Fair")]
        Fair = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Poor")]
        Poor = 5,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.15.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum Health2
    {
        [System.Runtime.Serialization.EnumMember(Value = @"NoUpdate")]
        NoUpdate = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Excellent")]
        Excellent = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VeryGood")]
        VeryGood = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Good")]
        Good = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Fair")]
        Fair = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Poor")]
        Poor = 5,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.15.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum Health3
    {
        [System.Runtime.Serialization.EnumMember(Value = @"NoUpdate")]
        NoUpdate = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Excellent")]
        Excellent = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VeryGood")]
        VeryGood = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Good")]
        Good = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Fair")]
        Fair = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Poor")]
        Poor = 5,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.15.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum Relation
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Self")]
        Self = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Spouse")]
        Spouse = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Child")]
        Child = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Sibling")]
        Sibling = 3,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.15.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum Health4
    {
        [System.Runtime.Serialization.EnumMember(Value = @"NoUpdate")]
        NoUpdate = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Excellent")]
        Excellent = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VeryGood")]
        VeryGood = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Good")]
        Good = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Fair")]
        Fair = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Poor")]
        Poor = 5,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.15.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum PersonHealth
    {
        [System.Runtime.Serialization.EnumMember(Value = @"NoUpdate")]
        NoUpdate = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Excellent")]
        Excellent = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"VeryGood")]
        VeryGood = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Good")]
        Good = 3,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Fair")]
        Fair = 4,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Poor")]
        Poor = 5,
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.13.15.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum PersonRelation
    {
        [System.Runtime.Serialization.EnumMember(Value = @"Self")]
        Self = 0,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Spouse")]
        Spouse = 1,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Child")]
        Child = 2,
    
        [System.Runtime.Serialization.EnumMember(Value = @"Sibling")]
        Sibling = 3,
    
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "12.0.12.0 (NJsonSchema v9.13.15.0 (Newtonsoft.Json v9.0.0.0))")]
    public partial class SwaggerException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public SwaggerException(string message, int statusCode, string response, System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException) 
            : base((StrykergyiLFBRAziluJbG.MutantControl.IsActive(452)?message + "\n\nStatus: " + statusCode + "\nResponse: \n" - response.Substring(0, response.Length >= 512 ? 512 : response.Length):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(447)?message + "\n\nStatus: " - statusCode :message + (StrykergyiLFBRAziluJbG.MutantControl.IsActive(446)?"":"\n\nStatus: " )+ statusCode )+ (StrykergyiLFBRAziluJbG.MutantControl.IsActive(448)?"":"\nResponse: \n" )+ response.Substring(0, (StrykergyiLFBRAziluJbG.MutantControl.IsActive(451)?!(response.Length >= 512 ):(StrykergyiLFBRAziluJbG.MutantControl.IsActive(450)?response.Length > 512 :(StrykergyiLFBRAziluJbG.MutantControl.IsActive(449)?response.Length < 512 :response.Length >= 512 )))? 512 : response.Length)), innerException)
        {
            StatusCode = statusCode;
            Response = response; 
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format((StrykergyiLFBRAziluJbG.MutantControl.IsActive(453)?"":"HTTP Response: \n\n{0}\n\n{1}"), Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "12.0.12.0 (NJsonSchema v9.13.15.0 (Newtonsoft.Json v9.0.0.0))")]
    public partial class SwaggerException<TResult> : SwaggerException
    {
        public TResult Result { get; private set; }

        public SwaggerException(string message, int statusCode, string response, System.Collections.Generic.Dictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException) 
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

    #pragma warning restore
}