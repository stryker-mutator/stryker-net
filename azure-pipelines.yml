name: $(Build.DefinitionName)-$(PackageVersion)$(rev:.r)

trigger:
  batch: true
  branches:
    include:
    - master

resources:
- repo: self
  clean: true
  
variables:
  PackageVersion: '0.5.0'
  PreReleaseVersion: $(PackageVersion)-pre-release.$(Build.BuildId)

phases:
- phase: Phase_1
  displayName: Windows
  condition: succeeded()

  queue:
    name: Hosted VS2017
  
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests'
    inputs:
      command: test
      projects: 'src/**/*.UnitTest.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Pack pre-release packages'
    inputs:
      command: pack
      nobuild: true
      versioningScheme: byEnvVar
      versionEnvVar: PreReleaseVersion
      packagesToPack: src/Stryker.Core/Stryker.Core/Stryker.Core.csproj;src/Stryker.CLI/Stryker.CLI/Stryker.CLI.csproj
      packDirectory: $(Build.ArtifactStagingDirectory)/pre-release

  - task: DotNetCoreCLI@2
    displayName: 'Push pre-release packages'
    inputs:
      command: push
      packagesToPush: $(Build.ArtifactStagingDirectory)/pre-release/StrykerMutator.*$(PreReleaseVersion).nupkg
      publishVstsFeed: '0f92dbf7-f2b5-4439-8a95-33631c57ffa5'

  - task: DotNetCoreCLI@2
    displayName: 'Install pre-release package in integration test project'
    inputs:
      command: custom
      custom: add
      arguments: integrationtests\IntegrationTests\Stryker.Core.IntegrationTest\ExampleProject\ExampleProject.XUnit\ExampleProject.XUnit.csproj package StrykerMutator.DotNetCoreCli -v $(PreReleaseVersion) -s https://pkgs.dev.azure.com/stryker-mutator/_packaging/stryker-net-pre-release@Prerelease/nuget/v3/index.json

  - task: DotNetCoreCLI@2
    displayName: 'Pack release package'
    inputs:
      command: pack
      nobuild: true
      packagesToPack: src/Stryker.Core/Stryker.Core/Stryker.Core.csproj;src/Stryker.CLI/Stryker.CLI/Stryker.CLI.csproj
      packDirectory: $(Build.ArtifactStagingDirectory)/release

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)/release
    condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))

- phase: Phase_2
  displayName: Linux
  condition: succeeded()
  
  queue:
    name: Hosted Ubuntu 1604
  
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests'
    inputs:
      command: test
      projects: 'src/**/*.UnitTest.csproj'

- phase: Phase_3
  displayName: Mac
  condition: succeeded()
  
  queue:
    name: Hosted macOS
  
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests'
    inputs:
      command: test
      projects: 'src/**/*.UnitTest.csproj'